%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -80 890 679 1370 
%%LanguageLevel: 1
%%Creator: CorelDRAW
%%Title: 2007eu-nucleotideoRNA.eps
%%CreationDate: Sun Feb 15 12:12:42 2009
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 14.0.0.567
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{0.99}{-0.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if
dup $frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add 100 div round cvi
dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq or{grad_color_from
devicen_to_cmyk cmyk2rgb rgb2hsb 3 copy/myb xd/mys xd/myh xd grad_color_to
devicen_to_cmyk cmyk2rgb rgb2hsb 3 1 roll 4 1 roll 5 1 roll @dlt_hsb}{
bGradDeviceN{@dlt_devicen}{@dlt_cmyk}ifelse}ifelse}bd/@dlt_cmyk{$fmp 50 eq{
grad_color_to 1 get grad_color_from 1 get sub nff div/dC xd grad_color_to 2 get
grad_color_from 2 get sub nff div/dM xd grad_color_to 3 get grad_color_from 3
get sub nff div/dY xd grad_color_to 4 get grad_color_from 4 get sub nff div/dK
xd}{$fco nff ge{/$fco nff 1 sub def}if grad_color_to 1 get grad_color_from 1
get sub 2 div $fco div/dC xd grad_color_to 2 get grad_color_from 2 get sub 2
div $fco div/dM xd grad_color_to 3 get grad_color_from 3 get sub 2 div $fco div
/dY xd grad_color_to 4 get grad_color_from 4 get sub 2 div $fco div/dK xd
/co_steps nff $fco sub def grad_color_to 1 get grad_color_from 1 get sub 2 div
co_steps div/dC2 xd grad_color_to 2 get grad_color_from 2 get sub 2 div
co_steps div/dM2 xd grad_color_to 3 get grad_color_from 3 get sub 2 div
co_steps div/dY2 xd grad_color_to 4 get grad_color_from 4 get sub 2 div
co_steps div/dK2 xd}ifelse}bd/@dlt_devicen{$fmp 50 eq{grad_color_from length 6
idiv dup/devicen_deltas exch array def 0 1 3 -1 roll 1 sub{dup dup
grad_color_to exch get 2 1 roll grad_color_from exch get sub nff div
devicen_deltas 3 1 roll put}for}{$fco nff ge{/$fco nff 1 sub def}if
grad_color_from length 6 idiv dup dup/devicen_deltas exch array def
/devicen_deltas2 exch array def 0 1 3 -1 roll 1 sub{dup dup dup grad_color_to
exch get exch grad_color_from exch get sub 2 div dup 3 1 roll $fco div
devicen_deltas 3 1 roll put nff $fco sub div devicen_deltas2 3 1 roll put}for
}ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop[1.0 myh mys
myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{kdb2 add 3
1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys xd/myh xd
hsb2rgb rgb2cmyk null]}{bGradDeviceN{dup length 6 idiv 1 sub 0 1 3 -1 roll{
exch dup dup 4 -1 roll dup $fi $fco lt $fmp 50 eq or{devicen_deltas exch get}{
devicen_deltas2 exch get}ifelse 4 1 roll dup 3 1 roll get 4 -1 roll add put
}for}{$fi $fco lt $fmp 50 eq or{[exch aload pop pop dK add 4 1 roll dY add 4 1
roll dM add 4 1 roll dC add 4 1 roll null]}{[exch aload pop pop dK2 add 4 1
roll dY2 add 4 1 roll dM2 add 4 1 roll dC2 add 4 1 roll null]}ifelse}ifelse}
ifelse}bd/@ffcol{set_fill_color}bd/@ff_strip_init{/$fil 0 def $frb dup 1 eq
exch 2 eq or{/strip_color[1.0 grad_color_from devicen_to_cmyk null]def}{
/strip_color grad_color_from def}ifelse}bd/@ftl{1 index 4 index sub dup $pad
mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei xd pop Tl @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{n 0 0 m 0 $hei l $pdw $hei l $pdw 0
l @cp F}if $fss $wid mul $pdw add 0 Tl nff{n 0 0 m 0 $hei l $wid $hei l $wid 0
l @cp strip_color @ffcol F $wid 0 Tl strip_color @ffnxt/strip_color exch def}
repeat n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp strip_color @ffcol F}bd/@ftrs
{1 index 4 index sub dup $rox mul/$row xd 2 div 1 index 4 index sub dup $roy
mul/$roh xd 2 div 2 copy dup mul exch dup mul add sqrt $row dup mul $roh dup
mul add sqrt add dup/$hei xd $fst div/$wid xd 4 index add $roh add exch 5 index
add $row add exch Tl $fan rotate pop pop pop pop @dlt @ff_strip_init
strip_color @ffcol $fss 0 eq{$fty 3 eq{$hei dup neg dup m 2 mul @sqr}{0 0 m 0 0
$hei 0 360 arc}ifelse F}if 1.0 $pad 2 mul sub dup scale $hei $fss $wid mul sub
/$hei xd nff{$fty 3 eq{n $hei dup neg dup m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360
arc}ifelse strip_color @ffcol F/$hei $hei $wid sub def strip_color @ffnxt
/strip_color exch def}repeat}bd/@ftc{1 index 4 index sub dup $rox mul/$row xd 2
div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup mul
add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst div/$wid xd 4
index add $roh add exch 5 index add $row add exch Tl pop pop pop pop @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{F}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
strip_color @ffcol F 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add arc F
/$sang $eang def/$eang $eang $dang add def strip_color @ffnxt/strip_color exch
def}repeat}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul exch
dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange $fsc
1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{opt$fst
dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop pop}
ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll div
exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst def
/$adj 1 def/$fss 0 def $o 1 eq setoverprint grad_use_shading_dict{
CorelShfillDoFill}{AutoSteps 0 gt{@fstAdjust}if 1 1 $fsc 1 sub{dup 1 sub $fsa
exch 2 mul get/grad_color_from exch def dup $fsa exch 2 mul get/grad_color_to
exch def $fsa exch 2 mul 1 add get $adj mul cvi $fss add/$fse xd bGradDeviceN{
/grad_color_from[grad_color_from aload pop tint_params aload pop sNamesDeviceN
aload pop]bind def/grad_color_to[grad_color_to aload pop tint_params aload pop
sNamesDeviceN aload pop]bind def}if @sv $ctm setmatrix wclip Bbllx Bblly Bburx
Bbury $fty 2 eq{@ftc}{1 index 3 index m 2 copy l 3 index 1 index l 3 index 3
index l @cp $fty dup 1 eq exch 3 eq or{@ftrs}{pop pop pop pop $fan rotate
pathbbox @ftl}ifelse}ifelse @rs/$fss $fse def}for @np}ifelse/$fst old$fst def}
bd/set_gradient{/$fil 2 def/bGradDeviceN xd/$fmp xd/$roy xd/$rox xd/$pad xd
/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst xd/$fsc xd/$fsa xd}bd
/grad_use_shading_dict{$fty 0 eq $fty 1 eq or $fty 3 eq is_distilling not and
or level3 and $frb 1 ne and $frb 2 ne and}bd
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/CorelShfillMapColor{SepMode_5 0 eq{bShfillDeviceN not{[exch aload pop pop
@tc_5]}if}{bShfillDeviceN{[exch aload pop tint_params aload pop sNamesDeviceN
aload pop]}if[exch separate_color aload pop pop @tc_5 SepsColor not{4 1 roll
pop pop pop 1 exch sub}if]}ifelse}bd/CorelShfillGetColorSpace{SepMode_5 0 eq
bShfillDeviceN and{[/DeviceN sNamesDeviceN/DeviceCMYK{tint_params
CorelTintTransformFunction}]}{SepMode_5 0 eq{/DeviceCMYK}{SepsColor{
/DeviceCMYK}{/DeviceGray}ifelse}ifelse}ifelse}bd/CorelShfillDoLinearParams{
flattenpath pathbbox 2 index add 2 div/$y1 xd/$x1 xd $y1/$y0 xd pop/$x0 xd $x1
$x0 sub $pad mul/$pdw xd $x1 $pdw sub/$x1 xd $x0 $pdw add/$x0 xd $x0 $x1 add 2
div/$xmid xd $y0/$ymid xd $xmid $x1 sub/$x1 xd $x1 neg/$x0 xd 0/$y0 xd 0/$y1 xd
$xmid $ymid translate/Coords[$x1 $y1 $x0 $y0]}def
/CorelShfillDoRadialSquareParams{flattenpath pathbbox/$y1 xd/$x1 xd/$y0 xd/$x0
xd $x1 $x0 sub/$width xd $y1 $y0 sub/$height xd $rox $width mul/$row xd $roy
$height mul/$roh xd $x0 $width 2 div add/$x0 xd $y0 $height 2 div add/$y0 xd
$x0 $row add/$x0 xd $y0 $roh add/$y0 xd $x0/$x1 xd $y0/$y1 xd $width dup mul
$height dup mul add sqrt 2 div $row dup mul $roh dup mul add sqrt add 1 $pad 2
mul sub mul/$rad0 xd 0/$rad1 xd}def/CorelShfillDoRadialParams{
CorelShfillDoRadialSquareParams/Coords[$x0 $y0 $rad0 $x1 $y1 $rad1]}def
/CorelShfillDoSquareParams{CorelShfillDoRadialSquareParams $x0 $y0 translate
$rad0/$x1 xd $x1 neg/$x0 xd $rad0/$y1 xd $y1 neg/$y0 xd/DataSource[0 0 0 1 0
$x1 $y1 0 0 $x0 $y1 0 2 $x0 $y0 0 2 $x1 $y0 0 2 $x1 $y1 0]}def
/CorelShfillFunction{<< $fty 0 eq{/ShadingType 2}{$fty 1 eq{/ShadingType 3}{
$fty 3 eq{/ShadingType 4}if}ifelse}ifelse/ColorSpace CorelShfillGetColorSpace
/Domain[0 1]$fty 0 eq{CorelShfillDoLinearParams}{$fty 1 eq{
CorelShfillDoRadialParams}{$fty 3 eq{CorelShfillDoSquareParams}if}ifelse
}ifelse/Function <</FunctionType 3/Domain[0 1]/Functions[/dMidPointPS 0.5 log
$fmp 100 div log div def 1 1 $fsc 1 sub{/nColor exch def <</FunctionType 2
/Domain[0 1]/N dMidPointPS/C0 $fsa nColor 1 sub 2 mul get CorelShfillMapColor
/C1 $fsa nColor 2 mul get CorelShfillMapColor >>}for]/Encode[$fsc 1 sub{0 1}
repeat]/Bounds[$fsc 2 gt{1 1 $fsc 2 sub{/nColor exch def/nBandPos 0 def 0 1
nColor{dup nColor le{$fsa exch 2 mul 1 add get nBandPos add/nBandPos exch def
}if}for nBandPos $fst div}for}if]>> $pad 0 gt{/Extend[true true]}{/Extend
[false false]}ifelse >> shfill}bd/CorelShfillDoFill{$ctm setmatrix wclip @gs
$fty 3 eq $pad 0 gt and{bGradDeviceN{$fsa 0 get tint_params sNamesDeviceN
create_colorarray_from_devicen_params set_fill_color}{$fsa 0 get set_fill_color
}ifelse F}if @gr Bbllx Bblly Bburx Bbury 1 index 3 index m 2 copy l 3 index 1
index l 3 index 3 index l @cp pop pop pop pop $fan rotate $o 1 eq setoverprint
/bShfillDeviceN bGradDeviceN def CorelShfillFunction}bd/CorelShfillDoMesh{$o 1
eq setoverprint shfill}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
1.00 setflat
/$fst 128 def
%%BeginResource: font Verdana
%!FontType1-1.0: Verdana 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Verdana def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 82 /R putdup 80 /P putdup 65 /A putdup 100 /d putdup 101 /e putdup 110 /n putdup 105 /i putdup 97 /a putdup 67 /C putdup 116 /t putdup 111 /o putdup 115 /s putdup 71 /G putdup 117 /u putdup 85 /U putdup 114 /r putdup 99 /c putdup 108 /l putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B19F4E468F0BBA3CB0D39633C5E72697C1F3B16F5C086BCD78EB5D831EDEE81F749131A03ECA4045AEE457C
874D650D9557BB21FDE616502672B16D46D6A01BA246D17194EE6A778FCC3F52283E0587ADF56187CE32D677153E1AC67B9EB267FE128F096702D0C178C1C400
445D575DE848D64BEA50BB05F0B0D604F2DDA8E78AD290AFD2EDF2451F4934C9EFE1B7991170752F5E6633A3D3CB7B371DBDA22F0455BB080865BDA5B5FBEF91
CCEF97DF53D3CF771F4601F1CFB78FD121ED7E6F66C100070C44860C32BC4D098A842886F33C73061E6180CCF887A3116CF678BF3871B65F5CB9BDB51AAEFDC7
E8970F6C78F2BE62E5D4218258B10530C8A77AE0E1CDB7670923AC80A2D5671FB263A52D7A1C8F49D3C258E88C6669E89DBF7319644E6B9C4856D65A388AD890
02A19090CE0EC1CBE55D2FFB003BCD9FF51B1BB86E3DB4F86A7302D5EF9B9EF91838642134F90B5F7E9C57BE46CD80054356661E58717FFC0C466FD1F812A60F
8E55F5D576159F7AA3A6017A0D16A66434AB2411A19B8401E87CD2F4A1C05921D336F636623C082575C60C5BED39AC5492594DFC40119BDCE46CF7573655D4BE
DCDE780BEB03E83DAFD33BB2D3FC006BA2B2922EA50DA4D450F16B1127874E5AE298DA0BBCD99DDDEB99EE3EF2FE1220D6D135E1AF99A90D3D90CCFAAA50F704
B03CE56BCE4D96CFBDEFE046FF1F9E032E1BF9B291F23CDA98FC1AA19A9955446063093EC0615032ECE3642486403288FCBFD80686DBC3FB1DEC4E24C616B1FC
B3679997E8573D87919F49017E13E6CC00E8C2F247F81EA88F1EAB9058DCBFD3AC0866196B46D39E6C99982DFB6107852991E4516EAD36533179C64D306D9EDC
795B69A50C151F0E2C50207263B751A5E257DD41B312B017E3EF3E2F2FFC0CD097C310B8BE71D72AC605CD975C7EC6E38B8DB58A00A0BE4AFBA76B46ECA2A01E
2A290199D6715F52920E193442DF0104D8F297B18922EEA5A68BD0BAD862EA0848CC4BFF54F7CE63F4A2BD338E58E91DEA5D4D54E305F7373D8837394241E14E
32BCF0A5B8E011C50B3153DD62AE5E733C08F0C9935847B8C89B7D33A1467426A9561A7E6BB7F9217636CA752BCC970BBF113CB5A1512817BF93CFDE977A8DDC
D46E6CC48C25E0D5E71A146E87A60F0B70CFEACC0D764FE9EF7AB30DEE5D0285865E47276A191E78007775CEC7CDB6626B78603E07C73AD89637910F40EDADBC
6BDB3B8600C2375DF67D26A8EB98B11A0BE1FA1F77006100B0F0E272E7F0884FCA2C08C4D3783925799F33C407E59172AD87FFFDFCF1F203254C63A4B8B85712
C3D9E4ACBD81E16E7931ED360609097C228C0E8A7E70F8D544649B0A9734FA9BDCF363B27336CF6321759D6552747AECACD41B8E8CFA32A69298B50B1DE66465
721AD8D57C1F72EEC19187F8087836D280DE1FC872EDF1B69FDE2DD6B02124DECF532BEDFF7B5589B97704BF315B5B6A1E344F1539D09A1B19586EF047E2FAC9
3185AC3167AE549B5FCAA9D70B01EFD562B7BDDB3CAD665F2C3C88BDC6C49183CA3E54C440DFE75458969ADE1CBD1DD1EC11E9D64760E8412C700328AF1AD3A6
BFF0560B2896D2CA2CAF6AACE692BFF530C7876BC9D1912B317BF22C41194CD17F246B16C61F38005E9BC010D0A2E87789ED91A0BC3655D6BBB3B53C80140AC6
991D02D25E22EB448C69FA3C57F90DAE88E405729A2E6F8ED904BB5AE6409D91AA50CD171535ED20F833A7F8C1B1D960A08DD52230CC56BBB82035C3BDDC7470
6EFA39ED54EAEC9ABD0C000C7CC650685C3D6DE0550A903F182EF0F3055AFEE4EE5CE4D5C197F11C96A59D92A1479801290ABA980E796D06E931277446056DE0
A35BF3A2DA4F491626F33B6676EF20B17E88ABF6B094825C78430362B115FED3E0E4DBD0CEBA61860F07FFFDFBC39EB4EB11E0A8BAF512D59125FA19D96E5414
12E3EFB6215DE2F91D4BB8420F9EF6DD8BE531D49EC8FD0978A71E43474F620783976DCFA72218D900D891B9C60377DC05C6FED1AB6D4F1DA310963CC6C5AAA9
3FCB0DD951606C8B2A384D902E55CA665CCB22FC186D0E4C9A13D69184600EB333DAA54AB07BA53770C9C7D11524E5028BFEA84B2C22F4F206FD6960E8A9EF71
71935A9FA68426839C025A1541E5EE46BC01BF046E93FCE4CC5FA7B641850B36A7ED7B9CFA569794B5C68F19434D9116EF1942614F44E59A5F0712BD2838C953
67F071728FD595051FA47E9293EAF1DE78F930B9AA1B556970AD177D6717A3D46DCD7E3FBFAD74E7FE2878B12CEFEEA372A3B01B591E129EA01CE8D8B8FF556A
69E464BECBE30BFEB35B56BCA5CC7E3EE88D0C3CFA5D8A52928BFF79E550113B5DA74552C098F820F2291863FB0E55560E7BB8514F986A3356353CE14189BFEA
986A2491D91525C534378549207E44A92636F5BA62FDD19A79B0803E9421512EC0D8AE83E9C30E9AF9514A98EDD986B87239DE34A99AC24138CB3CEC935285DD
3FA555C41B8687CCDB2213AB94D7936513542147CF6FF8CC8891F0192874E01AA1D1682671E29F95F64FB0510A0C69A5D66D111B752118D8FD4BD2B29E3E5570
326C24C5421A209BCF9DEB27761EDCD5DB90AA47AF16C63B2A890A39C6C60ABD07BDA08D4D49372188F9203FC14A6F3FFA0A0918FB56A88F7EC00197FEBF5EC4
7E7E654474534C422CFE7833682388AAF9ECBCF582372934BF48D249D52BD716DC2689372443D115DC14A58DBB79B9880FE0E42CD63A453DA4C8528B4AA93751
1FB5EC0A68E9B06BA943CBEBDAA9D03C8BAE37337236CA5FE9B938442ED7514402C9F001F5240DC6C5759D537C2CA011803AA12E0968D25968D95AE3872C2EB6
E637EBAC85A3D9C24CFB543266D144AB5615F8ABCDA6F4C71DCA935CECAB805EC0BC980788B0DBDE417D1CA4B2842FDA48B463A76A21C13A9EAF85621ED52B8C
58C6001F8C4339BA15D00DB45BED145A3C4C7F0537C5183523304719801EE5299C8928421DD2B8536F310925F5AD9B9EF0D5B6F9748744E3083EF821440DACDE
79770F3E6BEFCC38ED6364BEB3256240BBD8CCACFD476DC2FF74092506EB1D3885CAA57477B0C7CAD2B0DB23158C30243DFAD53FC69D28431FFB588C5EE84639
300A39C6CE2DCFBC55A850A09E93C1D5E89E1877B00EC8C8A3C4E6BE826F650622F24205A4F488F1641C7B02FBB1EB24A3D1B40E10A4E634AE62E46EAEA8FBA3
84DA2F81CAACBF2D67B6242D043CDC66F552A1F7455A6E0E424BA720FA0ACA7CA9681940D06E5770AA229B03CFC68B816213E28C94ADCB853C0D596032BB2ED9
FE3B55350F6FFFA05DBBBE6DB519B08B948B40B18516E44663CB9691F7C4C89DB259DE8FBC6752F7B6131CB8A61FE1B6D08F5C40C94183E83A0EC9A75B2102B8
9E7CF9D6A856E043078BE8421382C945AD6D52DBD9DDFFE1A994B96E21D06F007AD2292C54D0A07194AD5BC3924CE89561B915959A193DB1C79AEF7F90E8E607
D29D8A82FC48CD959A1ACD1DE932271D5460A9EEE0E78B71BF10E0EFF8EC5B20EE885AD01C2B0C04C04353F096FE57C8E66170B4C31909122C2E6C3DA863796D
670B82FFDD70EC4A3D8CBDEC2149A1F65BD4D4CC016655425D54B774C397390B6D1B05A4641368241FAA82D35820956817E508C18F8643F58E30D7E4C13F3DC9
12364FD8277C409124213CC4CA1E092340CEA4F763BEC6718B892B52DB7995DDE52004FC17E37E3F395DD5A69C20C9037AD956AE608D1B9A810CC6924B886903
2E339A71223B5F8EAACF443D8A4D5B28C94638662A304FCFBBC6B49EE8CB10163F0A7981DB3D34381514488EDD1090E92C95731CBE0CDA1FD9C98DF49104C97A
7369744166CB250A57CEB616A134EBD8D740BD6613DD03284F198110DEAE6B489C2BEE77FB5A18A2DC7AA811FEFAA7049B1DD6771B34120236A292F01C83DF87
4DB3AF2FAFB22B2A687D0FD743B211A00231C1B939A0ED2DDF77FD792565C9F6ECB3E5436C63EEDAF2A5511DBC10413291EE20E328E9465C1281BE3C671F4060
317C2B6257CFB89F2A3C782FED911708FE54E69CE020E057DBDCA274E1E488F145B7B808A14001FD1D6676E7E489F314A92595B1C8AA4F6B9FD8DEF88E0733E8
F96C119B72D2512128FAF8930603190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 352 
394 459 818 636 1076 727 269 454 454 636 818 364 454 364 454 636 
636 636 636 636 636 636 636 636 636 454 454 818 818 818 545 1000 
684 686 698 771 632 575 775 752 421 455 693 557 843 748 787 603 
787 695 684 616 732 684 989 685 615 685 454 454 454 818 636 636 
601 623 521 623 596 352 623 633 274 344 592 274 973 633 607 623 
623 427 521 394 633 592 818 592 592 525 635 454 635 818 1000 636 
1000 269 636 459 818 636 636 636 1522 684 454 1070 1000 685 1000 1000 
269 269 459 459 545 636 1000 636 977 521 454 982 1000 525 615 352 
394 636 636 636 636 454 636 636 1000 545 645 818 454 1000 636 542 
818 542 542 636 642 636 364 636 542 545 645 1000 1000 1000 545 684 
684 684 684 684 684 984 698 632 632 632 632 421 421 421 421 775 
748 787 787 787 787 787 818 787 732 732 732 732 615 606 620 601 
601 601 601 601 601 955 521 596 596 596 596 274 274 274 274 612 
633 607 607 607 607 607 818 607 633 633 633 633 592 623 592 ]
CorelDrawReencodeVect /_R21384667-Verdana /Verdana Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
151.56142 953.13033 285.49984 993.21449 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 1.00 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
151.56142 993.21449 m
151.56142 953.13033 L
285.49984 953.13033 L
258.44967 965.63282 257.67780 979.16854 285.49984 993.21449 C
240.85389 993.21449 196.20765 993.21449 151.56142 993.21449 C
@c
B

@rax %Note: Object
489.96142 953.13033 605.96079 993.21591 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.40 0.20 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
489.96142 993.21449 m
605.96079 993.21591 L
583.89165 973.17354 L
605.96079 953.13118 L
489.96142 953.13033 L
489.96142 993.21449 L
@c
B

@rax %Note: Object
151.56142 1212.33033 292.73868 1252.41591 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.40 0.00 1.00 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
151.56142 1252.41449 m
265.16523 1252.41591 L
292.73868 1232.37354 L
265.16523 1212.33118 L
151.56142 1212.33033 L
151.56142 1252.41449 L
@c
B

@rax %Note: Object
24.54576 1232.51329 32.82236 1279.62624 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.80 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.20 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
24.54576 1279.62624 m
32.82236 1279.62624 L
32.82236 1232.51329 L
24.54576 1232.51329 L
24.54576 1279.62624 L
@c
B

@rax %Note: Object
24.25153 1174.36110 124.15918 1268.80299 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
74.20535 1268.80299 m
99.18227 1250.76614 L
124.15918 1232.72929 L
114.61890 1203.54520 L
105.07861 1174.36110 L
74.20535 1174.36110 L
43.33209 1174.36110 L
33.79181 1203.54520 L
24.25153 1232.72929 L
49.22844 1250.76614 L
74.20535 1268.80299 L
@c
B

@rax %Note: Object
60.19880 1255.43310 88.21191 1282.17288 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
74.20535 1282.17288 m
81.93969 1282.17288 88.21191 1276.18583 88.21191 1268.80299 c
88.21191 1261.42016 81.93969 1255.43310 74.20535 1255.43310 c
66.47102 1255.43310 60.19880 1261.42016 60.19880 1268.80299 c
60.19880 1276.18583 66.47102 1282.17288 74.20535 1282.17288 c
@c
B

@rax 66.55720 1208.06476 83.33717 1225.51285 @E
[0.00028346 0.00000000 0.00000000 0.00028346 66.55719442 1208.06471171] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (R) @t
T
@rax %Note: Object
9.84869 1300.72450 52.02057 1340.80866 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.40 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
9.84869 1340.80866 m
52.02057 1340.80866 L
52.02057 1300.72450 L
9.84869 1300.72450 L
9.84869 1340.80866 L
@c
B

@rax 25.23260 1312.23458 38.98857 1329.68268 @E
[0.00028346 0.00000000 0.00000000 0.00028346 25.23259750 1312.23453468] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (P) @t
T
@rax 163.39124 1223.47644 258.34762 1242.07654 @E
[0.00028346 0.00000000 0.00000000 0.00028346 163.39123824 1223.84036468] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (Adenina) @t
T
@rax %Note: Object
29.41710 1280.72891 29.41824 1298.17559 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
29.41767 1298.17559 m
29.41767 1280.72891 L
S

@rax %Note: Object
127.69087 1232.35569 149.68885 1232.35682 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
127.69087 1232.35625 m
149.68885 1232.35625 L
S

@rax %Note: Object
362.94576 1232.51329 371.22236 1279.62624 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.80 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.20 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
362.94576 1279.62624 m
371.22236 1279.62624 L
371.22236 1232.51329 L
362.94576 1232.51329 L
362.94576 1279.62624 L
@c
B

@rax %Note: Object
362.65153 1174.36110 462.55918 1268.80299 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
412.60535 1268.80299 m
437.58227 1250.76614 L
462.55918 1232.72929 L
453.01890 1203.54520 L
443.47861 1174.36110 L
412.60535 1174.36110 L
381.73209 1174.36110 L
372.19181 1203.54520 L
362.65153 1232.72929 L
387.62844 1250.76614 L
412.60535 1268.80299 L
@c
B

@rax %Note: Object
398.59880 1255.43310 426.61191 1282.17288 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
412.60535 1282.17288 m
420.33969 1282.17288 426.61191 1276.18583 426.61191 1268.80299 c
426.61191 1261.42016 420.33969 1255.43310 412.60535 1255.43310 c
404.87102 1255.43310 398.59880 1261.42016 398.59880 1268.80299 c
398.59880 1276.18583 404.87102 1282.17288 412.60535 1282.17288 c
@c
B

@rax 404.95720 1208.06476 421.73717 1225.51285 @E
[0.00028346 0.00000000 0.00000000 0.00028346 404.95718204 1208.06471171] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (R) @t
T
@rax %Note: Object
348.24869 1300.72450 390.42057 1340.80866 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.40 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
348.24869 1340.80866 m
390.42057 1340.80866 L
390.42057 1300.72450 L
348.24869 1300.72450 L
348.24869 1340.80866 L
@c
B

@rax 363.63260 1312.23458 377.38857 1329.68268 @E
[0.00028346 0.00000000 0.00000000 0.00028346 363.63258512 1312.23453468] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (P) @t
T
@rax %Note: Object
489.96142 1212.33033 617.43203 1252.41449 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.40 0.00 0.00 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
489.96142 1252.41449 m
489.96142 1212.33033 L
603.26532 1212.33033 L
618.88649 1223.94217 625.17713 1236.99175 603.26532 1252.41449 C
565.49735 1252.41449 527.72939 1252.41449 489.96142 1252.41449 C
@c
B

@rax 501.79124 1223.47644 595.77194 1241.60457 @E
[0.00028346 0.00000000 0.00000000 0.00028346 501.79122586 1223.84036468] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (Citosina) @t
T
@rax %Note: Object
367.81710 1280.72891 367.81824 1298.17559 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
367.81767 1298.17559 m
367.81767 1280.72891 L
S

@rax %Note: Object
466.09087 1232.35569 488.08885 1232.35682 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
466.09087 1232.35625 m
488.08885 1232.35625 L
S

@rax %Note: Object
24.54576 973.31329 32.82236 1020.42624 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.80 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.20 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
24.54576 1020.42624 m
32.82236 1020.42624 L
32.82236 973.31329 L
24.54576 973.31329 L
24.54576 1020.42624 L
@c
B

@rax %Note: Object
24.25153 915.16110 124.15918 1009.60299 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
74.20535 1009.60299 m
99.18227 991.56614 L
124.15918 973.52929 L
114.61890 944.34520 L
105.07861 915.16110 L
74.20535 915.16110 L
43.33209 915.16110 L
33.79181 944.34520 L
24.25153 973.52929 L
49.22844 991.56614 L
74.20535 1009.60299 L
@c
B

@rax %Note: Object
60.19880 996.23310 88.21191 1022.97288 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
74.20535 1022.97288 m
81.93969 1022.97288 88.21191 1016.98583 88.21191 1009.60299 c
88.21191 1002.22016 81.93969 996.23310 74.20535 996.23310 c
66.47102 996.23310 60.19880 1002.22016 60.19880 1009.60299 c
60.19880 1016.98583 66.47102 1022.97288 74.20535 1022.97288 c
@c
B

@rax 66.55720 948.86476 83.33717 966.31285 @E
[0.00028346 0.00000000 0.00000000 0.00028346 66.55719442 948.86472120] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (R) @t
T
@rax %Note: Object
9.84869 1041.52450 52.02057 1081.60866 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.40 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
9.84869 1081.60866 m
52.02057 1081.60866 L
52.02057 1041.52450 L
9.84869 1041.52450 L
9.84869 1081.60866 L
@c
B

@rax 25.23260 1053.03458 38.98857 1070.48268 @E
[0.00028346 0.00000000 0.00000000 0.00028346 25.23259750 1053.03454416] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (P) @t
T
@rax 159.79124 964.27644 257.30362 982.40457 @E
[0.00028346 0.00000000 0.00000000 0.00028346 159.79123837 964.64037416] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (Guanina) @t
T
@rax %Note: Object
29.41710 1021.52891 29.41824 1038.97559 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
29.41767 1038.97559 m
29.41767 1021.52891 L
S

@rax %Note: Object
127.69087 973.15569 149.68885 973.15682 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
127.69087 973.15625 m
149.68885 973.15625 L
S

@rax %Note: Object
362.94576 973.31329 371.22236 1020.42624 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.80 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.20 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
362.94576 1020.42624 m
371.22236 1020.42624 L
371.22236 973.31329 L
362.94576 973.31329 L
362.94576 1020.42624 L
@c
B

@rax %Note: Object
362.65153 915.16110 462.55918 1009.60299 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
412.60535 1009.60299 m
437.58227 991.56614 L
462.55918 973.52929 L
453.01890 944.34520 L
443.47861 915.16110 L
412.60535 915.16110 L
381.73209 915.16110 L
372.19181 944.34520 L
362.65153 973.52929 L
387.62844 991.56614 L
412.60535 1009.60299 L
@c
B

@rax %Note: Object
398.59880 996.23310 426.61191 1022.97288 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.00 0.00 1.00 null ]  0
[ 1.00 0.00 0.00 0.00 0.00 null ]  128
] 2 128 0 0.00 0 0.00 0 0 50 false set_gradient
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.30 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
412.60535 1022.97288 m
420.33969 1022.97288 426.61191 1016.98583 426.61191 1009.60299 c
426.61191 1002.22016 420.33969 996.23310 412.60535 996.23310 c
404.87102 996.23310 398.59880 1002.22016 398.59880 1009.60299 c
398.59880 1016.98583 404.87102 1022.97288 412.60535 1022.97288 c
@c
B

@rax 404.95720 948.86476 421.73717 966.31285 @E
[0.00028346 0.00000000 0.00000000 0.00028346 404.95718204 948.86472120] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (R) @t
T
@rax %Note: Object
348.24869 1041.52450 390.42057 1081.60866 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.40 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
348.24869 1081.60866 m
390.42057 1081.60866 L
390.42057 1041.52450 L
348.24869 1041.52450 L
348.24869 1081.60866 L
@c
B

@rax 363.63260 1053.03458 377.38857 1070.48268 @E
[0.00028346 0.00000000 0.00000000 0.00028346 363.63258512 1053.03454416] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (P) @t
T
@rax 501.79124 964.27644 581.61175 982.87654 @E
[0.00028346 0.00000000 0.00000000 0.00028346 501.79122586 964.64037416] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R21384667-Verdana 84667.00000 z
0 0 (Ur) @t
96633 0 (acila) @t
T
@rax %Note: Object
367.81710 1021.52891 367.81824 1038.97559 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
367.81767 1038.97559 m
367.81767 1021.52891 L
S

@rax %Note: Object
466.09087 973.15569 488.08885 973.15682 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
466.09087 973.15625 m
488.08885 973.15625 L
S

@rax %Note: Object
-79.24564 890.31033 678.16261 1369.15257 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
-79.24564 1369.15257 m
678.16261 1369.15257 L
678.16261 890.31033 L
-79.24564 890.31033 L
-79.24564 1369.15257 L
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%+ font Verdana
%%EOF
